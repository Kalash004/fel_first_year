ARCH=riscv64-unknown-elf

SOURCES = fibo-hazards.S
TARGET_EXE = fibo-hazards

CC=$(ARCH)-gcc
CXX=$(ARCH)-g++
AS=$(ARCH)-as
LD=$(ARCH)-ld
OBJCOPY=$(ARCH)-objcopy

ARCHFLAGS += -mabi=ilp32
ARCHFLAGS += -march=rv32i
ARCHFLAGS += -fno-lto

CFLAGS  += -ggdb -Os -Wall
CXXFLAGS+= -ggdb -Os -Wall
AFLAGS  += -ggdb
LDFLAGS += -ggdb
LDFLAGS += -nostartfiles
LDFLAGS += -nostdlib
LDFLAGS += -static
#LDFLAGS += -specs=/opt/musl/riscv64-linux-gnu/lib/musl-gcc.specs

CFLAGS  += $(ARCHFLAGS)
CXXFLAGS+= $(ARCHFLAGS)
AFLAGS  += $(ARCHFLAGS)
LDFLAGS += $(ARCHFLAGS)

OBJECTS += $(filter %.o,$(SOURCES:%.S=%.o))
OBJECTS += $(filter %.o,$(SOURCES:%.c=%.o))
OBJECTS += $(filter %.o,$(SOURCES:%.cpp=%.o))

all : default

.PHONY : default clean dep all run_test

%.o:%.S
	$(CC) -D__ASSEMBLY__ $(AFLAGS) -c $< -o $@

%.o:%.c
	$(CC) $(CFLAGS) $(CPPFLAGS) -c $< -o $@

%.o:%.cpp
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c $<

%.s:%.c
	$(CC) $(CFLAGS) $(CPPFLAGS) -S $< -o $@

#default : $(TARGET_EXE)
default : run_test

$(TARGET_EXE) : $(OBJECTS)
	$(CC) $(LDFLAGS) $^ -o $@

dep: depend

depend: $(SOURCES) $(glob *.h)
	echo '# autogenerated dependencies' > depend
ifneq ($(filter %.S,$(SOURCES)),)
	$(CC)  -D__ASSEMBLY__ $(AFLAGS) -w -E -M $(filter %.S,$(SOURCES)) \
	  >> depend
endif
ifneq ($(filter %.c,$(SOURCES)),)
	$(CC) $(CFLAGS) $(CPPFLAGS) -w -E -M $(filter %.c,$(SOURCES)) \
	  >> depend
endif
ifneq ($(filter %.cpp,$(SOURCES)),)
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -w -E -M $(filter %.cpp,$(SOURCES)) \
	  >> depend
endif

clean:
	rm -f *.o *.a $(OBJECTS) $(TARGET_EXE) depend fibo_series.out fibo_limit.in

#riscv64-unknown-elf-objdump --source fibo-hazards

FIBO_SERIES_REF_FILE=fibo_series.ref
fibo_limit:=$(words $(filter-out 0x00000000,$(shell cat $(FIBO_SERIES_REF_FILE))))
FIBO_SERIES_BYTES:=$(words $(shell seq 1 8) $(shell seq 1 $(fibo_limit)) $(shell seq 1 $(fibo_limit)) $(shell seq 1 $(fibo_limit)) $(shell seq 1 $(fibo_limit)))

run_test: $(TARGET_EXE)
	echo $(fibo_limit) >fibo_limit.in
	qtrvsim_cli --pipelined --hazard-unit none \
		--dump-cycles $< \
		--load-range fibo_limit,fibo_limit.in \
		--dump-range fibo_series,$(FIBO_SERIES_BYTES),fibo_series.out
	diff -u -B -b fibo_series.out $(FIBO_SERIES_REF_FILE)

-include depend
